function sym() {
  const args = [];
  for (let i = 0; i < arguments.length; i++) {
    args.push(arguments[i]);
  }

  //console.log(args)

  function symDiff(arrayOne, arrayTwo) {
    console.log(arrayOne)
    console.log(arrayTwo)
    console.log("===========")
    const result = [];

    arrayOne.forEach(function (item) {
      //console.log(item)
      if (arrayTwo.indexOf(item) < 0 && result.indexOf(item) < 0) {
        console.log(arrayTwo.indexOf(item))
        console.log(result.indexOf(item))
        result.push(item);
      }
    });

    //console.log(result)

    arrayTwo.forEach(function (item) {
      if (arrayOne.indexOf(item) < 0 && result.indexOf(item) < 0) {
        result.push(item);
      }
    });

    console.log("Reduce Function Result: " + result)

    return result;
  }

  // Apply reduce method to args array, using the symDiff function
  return args.reduce(symDiff);
}

sym([1, 2, 5], [2, 3, 5], [3, 4, 5])